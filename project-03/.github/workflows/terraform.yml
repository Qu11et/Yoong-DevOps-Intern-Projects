name: "Validate Terraform Modules"

on:
  push:
    branches:
      - main
    paths:
      - 'modules/**'
  pull_request:
    paths:
      - 'modules/**'   

permissions:
  contents: read
  id-token: write

jobs:
  validate_modules:
    name: "Validate Terraform Modules"
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.7
          terraform_wrapper: false

      - name: Run Checkov scan using Docker
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            bridgecrew/checkov:latest \
            -d /workspace \
            --skip-check CKV2_AZURE_31,CKV_AZURE_178,CKV_TF_1,CKV_AZURE_10,CKV_AZURE_160,CKV_AZURE_9

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=false
        
      - name: Terraform Validate
        id: validate
        run: terraform validate
      
      # Bước này sẽ log vào Azure chỉ khi thực hiện plan trong pipeline chính
      - name: Log into Azure (when needed for plan)
        uses: azure/login@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      
      # Thêm bước plan trong trường hợp push vào main, nhưng chỉ để xem ảnh hưởng, không apply
      - name: Dry-run Plan for Changed Modules
        id: plan
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Note: This is a dry-run plan only to show potential impacts of module changes."
          echo "No changes will be applied automatically."
          terraform plan -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true